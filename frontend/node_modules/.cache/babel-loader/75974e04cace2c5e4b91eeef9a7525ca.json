{"ast":null,"code":"var _jsxFileName = \"C:\\\\frontend\\\\src\\\\components\\\\task\\\\task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = () => {\n  _s();\n\n  let init = true;\n  let [x, change] = useState(0);\n  let [str, strchange] = useState(\"BOB\");\n  let render = useRef(1);\n  useEffect(() => {\n    render.current = render.current + 1;\n  });\n\n  function handle() {\n    change(prev => {\n      return prev + 1;\n    });\n    console.log(x);\n  }\n\n  function handlestr() {}\n\n  useEffect(() => {\n    console.log(\" effect \");\n    str = \"Bob\" + x.toString();\n    strchange(str);\n  }, [x]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ro\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"co\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          children: \"row 1 col 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          children: \"row1  col2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"co\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          children: \"row 2 col 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          children: \"row 2  col 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: \" row 3 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Task, \"1c22bPL70ZACkPsYlAMFi6z9yhE=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Task","init","x","change","str","strchange","render","current","handle","prev","console","log","handlestr","toString"],"sources":["C:/frontend/src/components/task/task.js"],"sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\r\n\r\nimport './task.css'\r\n\r\nconst Task=()=>{\r\n\r\n    \r\n    let init=true;\r\n\r\n   let [x,change]=useState(0);\r\n\r\n   let [str,strchange]=useState(\"BOB\");\r\n\r\n   let render=useRef(1);\r\n\r\n   useEffect(()=>{\r\n\r\n            render.current=render.current+1;\r\n   });\r\n\r\n    function handle()\r\n    {\r\n        \r\n        \r\n        change( (prev)=>{return prev+1;});\r\n        console.log(x);\r\n    }\r\n\r\n    function handlestr()\r\n    {\r\n      \r\n       \r\n      \r\n\r\n    }\r\n\r\n    useEffect( ()=>{\r\n\r\n        console.log(\" effect \");\r\n        str=\"Bob\" + (x.toString());\r\n        strchange(str);\r\n\r\n    },[x] );\r\n\r\n\r\n    return (\r\n<React.Fragment>\r\n\r\n    <section className=\"ro\">\r\n\r\n    <div className=\"co\">\r\n\r\n            <article>row 1 col 1</article>\r\n            <article>row1  col2</article>\r\n\r\n    </div>\r\n\r\n        <div className=\"co\"> \r\n\r\n             <article>row 2 col 1</article>\r\n            <article>row 2  col 2</article>\r\n        \r\n        </div>\r\n        \r\n        <article> row 3 </article>\r\n    </section>\r\n        {/* <div className=\"task\">\r\n            <h1 className=\"white\">\r\n                The value is {x}\r\n            </h1>\r\n\r\n            <button onClick={handle}>\r\n                Increment \r\n            </button>\r\n        </div>\r\n\r\n<div className=\"task\">\r\n<h1 className=\"white\">\r\n    The value is {str}\r\n</h1>\r\n\r\n<button onClick={handlestr}>\r\n    Increment \r\n</button>\r\n</div>\r\n\r\n<div className=\"task\">\r\n           <h1 className=\"white\" >\r\n            Render count {render.current}\r\n           </h1>\r\n        </div> */}\r\n\r\n</React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Task;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,MAAjC,QAA8C,OAA9C;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAC,MAAI;EAAA;;EAGX,IAAIC,IAAI,GAAC,IAAT;EAED,IAAI,CAACC,CAAD,EAAGC,MAAH,IAAWN,QAAQ,CAAC,CAAD,CAAvB;EAEA,IAAI,CAACO,GAAD,EAAKC,SAAL,IAAgBR,QAAQ,CAAC,KAAD,CAA5B;EAEA,IAAIS,MAAM,GAACP,MAAM,CAAC,CAAD,CAAjB;EAEAD,SAAS,CAAC,MAAI;IAELQ,MAAM,CAACC,OAAP,GAAeD,MAAM,CAACC,OAAP,GAAe,CAA9B;EACR,CAHQ,CAAT;;EAKC,SAASC,MAAT,GACA;IAGIL,MAAM,CAAGM,IAAD,IAAQ;MAAC,OAAOA,IAAI,GAAC,CAAZ;IAAe,CAA1B,CAAN;IACAC,OAAO,CAACC,GAAR,CAAYT,CAAZ;EACH;;EAED,SAASU,SAAT,GACA,CAKC;;EAEDd,SAAS,CAAE,MAAI;IAEXY,OAAO,CAACC,GAAR,CAAY,UAAZ;IACAP,GAAG,GAAC,QAASF,CAAC,CAACW,QAAF,EAAb;IACAR,SAAS,CAACD,GAAD,CAAT;EAEH,CANQ,EAMP,CAACF,CAAD,CANO,CAAT;EASA,oBACJ,QAAC,KAAD,CAAO,QAAP;IAAA,uBAEI;MAAS,SAAS,EAAC,IAAnB;MAAA,wBAEA;QAAK,SAAS,EAAC,IAAf;QAAA,wBAEQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFR,eAGQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHR;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eASI;QAAK,SAAS,EAAC,IAAf;QAAA,wBAEK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFL,eAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAgBI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADI;AAiDH,CA1FD;;GAAMF,I;;KAAAA,I;AA4FN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}